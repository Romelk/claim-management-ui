import React from 'react';
import {
    Box,
    Typography,
    Button,
    Grid,
    Card,
    CardContent,
    CardActionArea,
    IconButton,
} from '@mui/material';
import { Close as CloseIcon, Add as AddIcon } from '@mui/icons-material';

import { actionCards, getSmallIcon } from './ordered-actions-constants';
import { ActionType, ActionData } from './ordered-actions-types';

// Empty state component
export const EmptyState: React.FC<{ onAddAction: () => void }> = ({ onAddAction }) => (
    <Box
        sx={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            textAlign: 'center',
            py: 8,
            px: 4,
        }}
    >
        <Box
            sx={{
                mb: 3,
                width: 80,
                height: 80,
                borderRadius: '50%',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                backgroundColor: 'rgba(25, 118, 210, 0.1)',
            }}
        >
            <AddIcon sx={{ fontSize: 40, color: 'primary.main' }} />
        </Box>

        <Typography variant="h6" gutterBottom>
            No Actions Ordered Yet
        </Typography>

        <Typography variant="body2" color="text.secondary" sx={{ mb: 4, maxWidth: 500 }}>
            Use this section to order any actions relevant to the Claim. Actions help track and manage
            the necessary steps to resolve the claim efficiently.
        </Typography>

        <Button
            variant="contained"
            color="primary"
            size="large"
            startIcon={<AddIcon />}
            onClick={onAddAction}
        >
            Add Action
        </Button>
    </Box>
);

// Action selection component
export const ActionSelection: React.FC<{
    onSelectAction: (type: ActionType) => void,
    onCancel: () => void
}> = ({ onSelectAction, onCancel }) => (
    <Box>
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
            <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
                Select an Action Type
            </Typography>
            <IconButton onClick={onCancel} color="default">
                <CloseIcon />
            </IconButton>
        </Box>

        <Grid container spacing={2}>
            {actionCards.map((action) => (
                <Grid item xs={12} sm={6} md={4} key={action.type}>
                    <Card
                        sx={{
                            height: '100%',
                            transition: 'transform 0.2s, box-shadow 0.2s',
                            '&:hover': {
                                transform: 'translateY(-4px)',
                                boxShadow: 4,
                            },
                        }}
                    >
                        <CardActionArea
                            onClick={() => onSelectAction(action.type)}
                            sx={{
                                height: '100%',
                                display: 'flex',
                                flexDirection: 'column',
                                alignItems: 'stretch',
                            }}
                        >
                            <Box
                                sx={{
                                    pt: 2,
                                    display: 'flex',
                                    justifyContent: 'center',
                                }}
                            >
                                <Box
                                    sx={{
                                        color: 'white',
                                        bgcolor: action.color,
                                        width: 60,
                                        height: 60,
                                        borderRadius: '50%',
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                    }}
                                >
                                    {action.iconElement}
                                </Box>
                            </Box>
                            <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>
                                <Typography gutterBottom variant="h6" component="div" align="center">
                                    {action.title}
                                </Typography>
                                <Typography variant="body2" color="text.secondary" align="center">
                                    {action.description}
                                </Typography>
                            </CardContent>
                        </CardActionArea>
                    </Card>
                </Grid>
            ))}
        </Grid>
    </Box>
);

// Action list item component
export const ActionListItem: React.FC<{
    action: ActionData,
    onViewDetails: (action: ActionData) => void
}> = ({ action, onViewDetails }) => {
    const actionInfo = actionCards.find((a) => a.type === action.type);

    return (
        <Grid item xs={12}>
            <Paper
                variant="outlined"
                sx={{
                    p: 2,
                    borderLeft: `4px solid ${actionInfo?.color || '#ccc'}`,
                    '&:hover': {
                        boxShadow: 1,
                    },
                }}
            >
                <Box sx={{ display: 'flex', alignItems: 'center' }}>
                    {actionInfo && (
                        <Box
                            sx={{
                                color: 'white',
                                bgcolor: actionInfo.color || '#ccc',
                                width: 36,
                                height: 36,
                                borderRadius: '50%',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                mr: 2,
                            }}
                        >
                            {getSmallIcon(action.type)}
                        </Box>
                    )}

                    <Box sx={{ flexGrow: 1 }}>
                        <Typography variant="subtitle1" component="div">
                            {action.title}
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                            Created: {action.createdAt.toLocaleDateString()} - Status: {action.status}
                        </Typography>
                    </Box>

                    <Button
                        variant="outlined"
                        size="small"
                        sx={{ mr: 1 }}
                        onClick={() => onViewDetails(action)}
                    >
                        View Details
                    </Button>
                </Box>
            </Paper>
        </Grid>
    );
};